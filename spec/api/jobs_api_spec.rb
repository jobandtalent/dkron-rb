=begin
#Dkron REST API

#You can communicate with Dkron using a RESTful JSON API over HTTP. Dkron nodes usually listen on port `8080` for API requests. All examples in this section assume that you've found a running leader at `localhost:8080`.  Dkron implements a RESTful JSON API over HTTP to communicate with software clients. Dkron listens in port `8080` by default. All examples in this section assume that you're using the default port.  Default API responses are unformatted JSON add the `pretty=true` param to format the response. 

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.2

=end

require 'spec_helper'
require 'json'

# Unit tests for Dkron::JobsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'JobsApi' do
  before do
    # run before each test
    @instance = Dkron::JobsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of JobsApi' do
    it 'should create an instance of JobsApi' do
      expect(@instance).to be_instance_of(Dkron::JobsApi)
    end
  end

  # unit tests for create_or_update_job
  # Create or updates a new job. 
  # @param body Updated job object
  # @param [Hash] opts the optional parameters
  # @return [Job]
  describe 'create_or_update_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_job
  # Delete a job. 
  # @param job_name The job that needs to be deleted.
  # @param [Hash] opts the optional parameters
  # @return [Job]
  describe 'delete_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_jobs
  # List jobs. 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tags Filter jobs by tags
  # @return [Array<Job>]
  describe 'get_jobs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_job
  # Executes a job. 
  # @param job_name The job that needs to be run.
  # @param [Hash] opts the optional parameters
  # @return [Job]
  describe 'run_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_job_by_name
  # Show a job. 
  # @param job_name The job that needs to be fetched.
  # @param [Hash] opts the optional parameters
  # @return [Job]
  describe 'show_job_by_name test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for toggle_job
  # Toggle a job. 
  # @param job_name The job that needs to be toggled.
  # @param [Hash] opts the optional parameters
  # @return [Job]
  describe 'toggle_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
